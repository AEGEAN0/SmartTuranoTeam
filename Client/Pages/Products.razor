@page "/products"
@inject HttpClient http
@inject NavigationManager navigation

<div>
    @pippo

</div>

<img src="https://images.ctfassets.net/hrltx12pl8hq/4f6DfV5DbqaQUSw0uo0mWi/ff068ff5fc855601751499d694c0111a/shutterstock_376532611.jpg?fit=fill&w=800&h=300" />
<img src="/Image/Cattura.JPG" />

<div class="content-container">

    <ListHeader Title="My List"
                HandleAdd="@AddNewProduct"
                HandleRefresh="@HandleRefresh"
                RoutePath="/products" />
    <div class="columns is-multiline is-variable">
        <div class="column is-8">
            <ProductList ErrorMessage="@errorMessage"
                         Products="@products"
                         SelectProduct="@SelectProduct"
                         DeleteProduct="@DeleteProduct" />
        </div>
    </div>

    <ModalYesNo Message="@modalMessage"
                OnNo="@CloseModal"
                OnYes="@DeleteFromModal"
                Show="@showModal" />
</div>

@code {
    private string errorMessage = "";
    private IEnumerable<Product> products;
    private Product productToDelete;
    private bool showModal;
    private string modalMessage = "";
    private string pippo = "";

    protected override async Task OnInitializedAsync()
    {

        try
        {


            //var  byteOfTheFile = await http.GetStringAsync("Cattura.jpg");
            //pippo = byteOfTheFile.ToString();
            products = await http.GetFromJsonAsync<IEnumerable<Product>>("api/products");
        }
        catch (Exception ex)
        {
            string S = ex.Message;
        }


    }

    private void AddNewProduct()
    {
        navigation.NavigateTo("/product/0");
    }

    private async Task HandleRefresh()
    {
        products = await http.GetFromJsonAsync<IEnumerable<Product>>("api/products");
    }

    private void SelectProduct(Product product)
    {
        navigation.NavigateTo($"/product/{product.Id}");
    }

    private void DeleteProduct(Product product)
    {
        productToDelete = product;
        showModal = true;
        modalMessage = $"Would you like to delete {productToDelete.Name}";
    }

    private void CloseModal()
    {
        productToDelete = null;
        showModal = false;
    }

    private async Task DeleteFromModal()
    {
        await http.DeleteAsync($"api/products/{productToDelete.Id}");
        await HandleRefresh();
        productToDelete = null;
        showModal = false;
    }
}
